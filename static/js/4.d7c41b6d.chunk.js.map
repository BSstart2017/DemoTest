{"version":3,"sources":["hoc/withAuthRedirect.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/DialogItem/DialogItem.js","Components/Dialogs/Message/Message.js","Components/Dialogs/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.js","Components/Dialogs/DialogsContainer.js"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","Dialog","src","alt","id","name","Message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","DialogsElements","DialogsData","map","d","MessageElements","MessageData","m","message","NewMessageBody","values","sendMessage","compose","DialogsPage","dispatch","sendMessageCreator"],"mappings":"4NAKIA,EAA6B,SAACC,GAAD,MAAY,CACrCC,OAAQD,EAAME,KAAKD,SAGdE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,uKAInC,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAG,eAJR,GAEXC,IAAML,WAQtC,OAFqCM,YAASX,EAATW,CAAqCL,K,oBChB9EM,EAAOC,QAAU,CAAC,QAAU,2B,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,4B,8GCYjDC,EATI,SAACN,GAChB,OAAO,qBAAKO,UAAWC,IAAEC,OAAlB,SACH,gCACI,qBAAKC,IAAI,+EAA+EC,IAAI,QAC5F,cAAC,IAAD,CAASV,GAAI,YAAcD,EAAMY,GAAjC,SAAsCZ,EAAMa,a,kBCCzCC,EANC,SAACd,GACb,OACI,qBAAKO,UAAWC,IAAEM,QAAlB,SAA4Bd,EAAMa,Q,yCCCnCE,EAAcC,YAAiB,IAmBvBC,cAAU,CAACC,KAAM,2BAAjBD,EAjBQ,SAACjB,GACpB,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXV,KAAK,iBACLW,SAAU,CAACC,IAAUV,GACrBW,YAAY,0IAEvB,8BACI,mICeDC,EA1BC,SAAC3B,GAEb,IAAI4B,EAAkB5B,EAAM6B,YAAYC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYlB,KAAMkB,EAAElB,KAAiBD,GAAImB,EAAEnB,IAAZmB,EAAEnB,OAC9EoB,EAAkBhC,EAAMiC,YAAYH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASrB,KAAMqB,EAAEC,SAAcD,EAAEtB,OAC7DZ,EAAMoC,eAO3B,OAAKpC,EAAMN,OAGP,sBAAKa,UAAWC,IAAEmB,QAAlB,UACI,8BACKC,IAEL,gCACKI,EACD,cAAC,EAAD,CAAgBb,SAbR,SAACkB,GACjBrC,EAAMsC,YAAYD,EAAOD,yBAGH,cAAC,IAAD,CAAUnC,GAAI,Y,yBCK7BsC,sBACXpC,aAlBoB,SAACV,GACrB,MAAO,CACHoC,YAAapC,EAAM+C,YAAYX,YAC/BI,YAAaxC,EAAM+C,YAAYP,YAC/BG,eAAgB3C,EAAM+C,YAAYJ,eAClC1C,OAAQD,EAAME,KAAKD,WAIA,SAAC+C,GACxB,MAAO,CACHH,YAAa,SAACF,GACVK,EAASC,YAAmBN,SAOpCxC,IAFW2C,CAGTZ","file":"static/js/4.d7c41b6d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n        isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to='/Login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1RKdS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialog\":\"DialogItem_Dialog__34dA3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Message\":\"Message_Message__30bQu\",\"Messages\":\"Message_Messages__ZB-Gz\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return <div className={s.Dialog}>\r\n        <div>\r\n            <img src=\"https://eduodessa.files.wordpress.com/2017/06/photo-833032.jpg?w=1400&h=9999\" alt=\"ava\"/>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.Message}>{props.name}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../Common/FormsControl/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\n\r\nconst  maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       name=\"NewMessageBody\"\r\n                       validate={[required, maxLength50]}\r\n                       placeholder=\"Введите текст сообщения...\" />\r\n            </div>\r\n            <div>\r\n                <button>Новое сообщение</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nexport default reduxForm({form: \"dialog-add-message-form\"})(AddMessageForm);","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let DialogsElements = props.DialogsData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>)\r\n    let MessageElements = props.MessageData.map(m => <Message name={m.message} key={m.id}/>)\r\n    let NewMessageBody = props.NewMessageBody\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.NewMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/Login\"}/>\r\n\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div>\r\n                {DialogsElements}\r\n            </div>\r\n            <div>\r\n                {MessageElements}\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        DialogsData: state.DialogsPage.DialogsData,\r\n        MessageData: state.DialogsPage.MessageData,\r\n        NewMessageBody: state.DialogsPage.NewMessageBody,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return {\r\n        sendMessage: (NewMessageBody) => {\r\n            dispatch(sendMessageCreator(NewMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n    )(Dialogs);\r\n"],"sourceRoot":""}